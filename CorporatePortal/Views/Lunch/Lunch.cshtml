@model List<CorporatePortal.Models.LunchOrder>
@using System.Linq

@{
    ViewBag.Title = "Заказ обедов";
    ViewBag.HeaderTitle = "Заказ обедов";
    Layout = "_Layout";

    var currentPortions = Model?.FirstOrDefault()?.Portions ?? 1;
    var minPortions = ViewBag.HasOrder ? 0 : 1;
    var isExistingOrder = ViewBag.HasOrder;
}

<div class="lunch-page-container">
    <div class="container-with-button">
        <h2 class="page-title">Заказ обедов</h2>
        <button onclick="window.location.href='@Url.Action("Index", "Home")'"
                class="back-button"
                id="backButton">
            <i class="fas fa-arrow-left"></i> Назад
        </button>
    </div>

    <div class="content-card">
        @if (!ViewBag.IsOrderAvailable)
        {
            <div class="info-message">
                <i class="fas fa-info-circle"></i>
                <span>Заказы обедов недоступны в пятницу и субботу.</span>
            </div>
        }
        else if (ViewBag.IsSunday)
        {
            <div class="info-message">
                <i class="fas fa-info-circle"></i>
                <span>Сегодня воскресенье. Вы можете заказать обед на понедельник.</span>
            </div>
        }
        else
        {
            <div class="order-info">
                <p>Здесь вы можете заказать обед. Сегодня заказываете — завтра получаете. Заказ обедов на завтра осуществляется до 17:00.</p>
            </div>
        }

        @if (ViewBag.IsOrderAvailable)
        {
            <div class="order-form">
                <form method="post" asp-controller="Lunch" asp-action="@(isExistingOrder ? "EditOrder" : "PlaceOrder")"
                      onsubmit="return validatePortions(@(isExistingOrder ? "true" : "false"))">
                    <div class="form-field">
                        <label class="field-label">Количество порций:</label>
                        <div class="portion-control-container">
                            <div class="portion-control">
                                <button type="button" class="portion-btn" id="decreasePortion">-</button>
                                <input type="number" id="portions" name="portions"
                                       value="@currentPortions" min="@minPortions" readonly
                                       class="portion-input" />
                                <button type="button" class="portion-btn" id="increasePortion">+</button>
                            </div>
                            <button type="submit" class="submit-button">
                                @(isExistingOrder ? "Изменить заказ" : "Заказать обед")
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        }

        <div class="orders-list">
            <h3 class="orders-title">Список заказов на сегодня:</h3>
            @if (Model != null && Model.Any())
            {
                <ul class="orders-items">
                    @foreach (var order in Model)
                    {
                        <li class="order-item">
                            <span class="order-name">@order.FullName</span>
                            <span class="order-portions">@order.Portions порция(и)</span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="no-orders">Заказов на сегодня нет.</p>
            }
        </div>
    </div>
</div>

<script>
    document.getElementById('increasePortion')?.addEventListener('click', function () {
        const input = document.getElementById('portions');
        if (input) input.value = parseInt(input.value) + 1;
    });

    document.getElementById('decreasePortion')?.addEventListener('click', function () {
        const input = document.getElementById('portions');
        const min = @minPortions;
        if (input && parseInt(input.value) > min) {
            input.value = parseInt(input.value) - 1;
        }
    });

    function validatePortions(isExistingOrder) {
        const portions = parseInt(document.getElementById('portions').value);
        const errorElement = document.getElementById('error-message');

        if (!isExistingOrder && portions < 1) {
            errorElement.style.display = 'block';
            return false;
        }
        errorElement.style.display = 'none';
        return true;
    }
    document.getElementById('backButton')?.addEventListener('click', function (e) {
        this.style.pointerEvents = 'none';
        this.style.opacity = '0.7';
    });
</script>